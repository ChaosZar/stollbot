group 'org.chaos.stollbot'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'groovy'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter() //This prevents issues with transitive dependencies
    maven {
        url "https://jitpack.io"
    }
}

dependencies {

    //discord API - to use Discord
    compile "com.github.austinv11:Discord4j:dev-SNAPSHOT"

    //spock - testing
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "org.codehaus.groovy:groovy-all:2.4.1"
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4-rc-3"
    testCompile "org.hamcrest:hamcrest-core:1.3"
    testRuntime "cglib:cglib-nodep:3.2.4"
    testRuntime "org.objenesis:objenesis:2.5.1"

    //xstream - to load config
    compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.2'

    //logging
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'

    //Weld  - CDI
    compile group: 'org.jboss.weld.se', name: 'weld-se', version: '2.4.3.Final'
    // -- CDI-Scheduler
    compile group: 'de.mirkosertic.cdicron', name: 'cdi-cron-quartz-scheduler', version: '1.0'

}

compileJava.options.encoding = 'UTF-8'

build.doLast {
    GFileUtils.copyFile(
            new File(buildDir, 'resources/main/META-INF/beans.xml'),
            new File(buildDir, 'classes/main/META-INF/beans.xml')
    )
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { 'lib/' + it.getName() }.join(' '),
                'Main-Class': 'org.jboss.weld.environment.se.StartMain'
        )
    }
}

jar.doLast {
    from {
        configurations.compile.collect {
            if (it.isDirectory()) {
                it
            } else {
                GFileUtils.copyFile(it, new File(buildDir, 'libs/lib/' + it.getName()))
                it
            }
        }
    }
}